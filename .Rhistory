TRUE)
ggplot(comb)+geom_histogram(aes(Item_Visibility),binwidth = 0.005,fill="blue")
######creating new variable for model performance (feature engineering)
perishable = c("Breads","Breakfast","Dairy","Fruits and Vegetables","Meat","Seafood")
non_perishable = c("Baking Goods","Canned","Frozen Foods","Hard Drinks","
Health and Hygiene","Household","Soft Drinks")
#Item_Type_new variable
comb[,Item_Type_new := ifelse(Item_Type %in% perishable, "perishable" , ifelse(Item_Type %in% non_perishable, "non_perishable","not sure"))]
#comparing the two variable Item_type and item_identifier
table(comb$Item_Type,substr(comb$Item_Identifier,1,2))
#item_category new variable
comb[,Item_cateory := substr(comb$Item_Identifier,1,2)]
#changing the values of fat content wherever item category NC (no fat content)
comb$Item_Fat_Content[comb$Item_cateory == "NC"] = "non-Edible"
#year of operation for outlets
comb[,Outlet_Year := 2013 - Outlet_Establishment_Year]
comb$Outlet_Establishment_Year = as.factor(comb$Outlet_Establishment_Year)
#price per weight
comb[,price_per_weight := Item_MRP/Item_Weight]
ggplot(comb)+geom_histogram(aes(price_per_weight),binwidth = 1,fill="blue")#price_per_weight
#new ind variable item _Mrp_cluster
comb[,Item_Mrp_cluster :=
ifelse(Item_MRP < 69,"1st",
ifelse(Item_MRP >= 69 & Item_MRP < 136,"2nd",
ifelse(Item_MRP >= 136 & Item_MRP < 203,"3rd","4th")))
]
#########converting categorial to numerical
#label encoding(ordinal variables)
comb[,Outlet_Size_num := ifelse(Outlet_Size == "Small",0, ifelse(Outlet_Size == "Medium",1,2))]
comb[,Outlet_Location_Type_num := ifelse(Outlet_Location_Type == "Tier 3",0,ifelse(Outlet_Location_Type == "Tier 2",1,2))]
#removing categorial variable
comb[,c("Outlet_Size","Outlet_Location_Type"):= NULL]
#one hot encoding 0 & 1
oh = dummyVars("~.",data = comb[,-c("Item_Identifier","Outlet_Establishment_Year","Item_Type")],fullRank = T)
ho = data.table(predict(oh,comb[,-c("Item_Identifier","Outlet_Establishment_Year","Item_Type")]))
comb = cbind(comb[,"Item_Identifier"],ho)
########removing the skewness
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
ggplot(comb)+geom_histogram(aes(Item_Visibility),binwidth = 0.005,fill="blue")
comb[,price_per_weight := log(price_per_weight + 1)]
ggplot(comb)+geom_histogram(aes(price_per_weight),binwidth = 1,fill="blue")#price_per_weight
#######splitting of data into train and test
train = comb[1:nrow(train)]
test = comb[(nrow(train) + 1):nrow(comb)]
test[,Item_Outlet_Sales := NULL]#removing the na values for test
######correlated variables
cor_train = cor(train[,-c("Item_Identifier")])
corrplot(cor_train,method = "pie",type = "lower",tl.cex = 0.9)
#there is multicorrelated between price_per_weight and item weight same with item_mrp
train[,Item_Outlet_Sales := log(Item_Outlet_Sales + 1)]
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
ggplot(comb)+geom_histogram(aes(Item_Visibility),binwidth = 0.005,fill="blue")
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
comb[,Item_Visibility := log(Item_Visibility + 1)] #log+1 avoid the dvision by zero
ggplot(comb)+geom_histogram(aes(Item_Visibility),binwidth = 0.005,fill="blue")
###Xboost model
param_list = list( objective = "reg:linear",eta =0.01, gamma=1,max_depth=6,subsample=0.8,colsample_bytree=0.5)
dtrain = xgb.DMatrix(data = as.matrix(train[,-c("Item_Identifier","Item_Outlet_Sales")]),label = train$Item_Outlet_Sales)
dtest = xgb.DMatrix(data = as.matrix(test[,-c("Item_Identifier")]))
#cross validation
set.seed(111)
xgbcv = xgb.cv(params = param_list , data = dtrain ,nrounds = 1000 , nfold = 5 ,print_every_n = 10,
early_stopping_rounds = 30 , maximize = F)
xgb_model = xgb.train(data = dtrain , params = param_list , nrounds = 452)
xgb_model = xgb.train(data = dtrain , params = param_list , nrounds = 664)
submission$Item_Outlet_Sales = predict(xgb_model,test[,-c("Item_Identifier")])
submission = fread("sample_submission.csv")
submission$Item_Outlet_Sales = predict(xgb_model,test[,-c("Item_Identifier")])
View(submission)
submission$Item_Outlet_Sales = predict(xgb_model,test[,-c("Item_Identifier")])
submission$Item_Outlet_Sales = predict(xgb_model,test])
submission$Item_Outlet_Sales = predict(xgb_model,test)
set.seed(1238)
my_control = trainControl(method = "cv" , number = 5)
tgrid = expand.grid(.mtry = c(3:10),.splitrule = "variance",.min.node.size = c(10,15,20))
random_model = train(x=train[,-c("Item_Identifier","Item_Outlet_Sales")],y=train$Item_Outlet_Sales,
+ method ="ranger",trControl= my_control,tuneGrid=tgrid,num.trees=400,importance="permutation")
random_model = train(x=train[,-c("Item_Identifier","Item_Outlet_Sales")],y=train$Item_Outlet_Sales,
method ="ranger",trControl= my_control,tuneGrid=tgrid,num.trees=400,importance="permutation")
submission$Item_Outlet_Sales = predict(random_model,test[,-c("Item_Identifier")])
write.csv(submission,"D:/BA classes/big market sale predication/random_forest_submit.csv",row.names = F )
View(submission)
getwd()
library(cowplot)#combing mutiple plots
setwd("D:/BA classes/big market sale predication")
getwd()
library(data.table)#used for reading and manipulation of data
library(dplyr)#used for data manipulation and joining of data
library(ggplot2)#used for plotting
library(caret)#used for modeling
library(corrplot)#used for correlation
library(xgboost)#used for xgboost model
library(cowplot)#combing mutiple plots
test = fread("Test.csv")
train = fread("Train.csv")
dim(train)
dim(test)
str(train)
setwd("D:/BA classes")
getwd()
library(data.table)#used for reading and manipulation of data
library(dplyr)#used for data manipulation and joining of data
library(ggplot2)#used for plotting
library(caret)#used for modeling
library(corrplot)#used for correlation
library(xgboost)#used for xgboost model
library(cowplot)#combing mutiple plots
train = fread("Train.csv")
test = fread("Test.csv")
dim(train)
dim(test)
str(train)
View(train)
str(test)
test[,Business_Sourced := NA]
comb = rbind(train,test)#combing the train and test to to perform bivariate analysis
dim(comb)
View(comb)
View(comb)
ggplot(train)+geom_bar(aes(train$Business_Sourced),binwidth = 100,fill="green")+xlab("Business_Sourced")
ggplot(comb %>% group_by(Applicant_Occupation) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Occupation,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Occupation,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Occupation")
ggplot(comb %>% group_by(Application_Receipt_Date) %>% summarise(Count = n())) +
geom_bar(aes(Application_Receipt_Date,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Application_Receipt_Date,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Application_Receipt_Date")
ggplot(comb %>% group_by(Applicant_BirthDate) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_BirthDate,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_BirthDate,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_BirthDate")
ggplot(train)+geom_bar(aes(train$Business_Sourced),binwidth = 100,fill="green")+xlab("Business_Sourced")
ggplot(comb %>% group_by(Applicant_Occupation) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Occupation,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Occupation,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Occupation")
ggplot(comb %>% group_by(Applicant_Gender) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Gender,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Gender,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Gender")
ggplot(comb %>% group_by(Applicant_Marital_Status) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Marital_Status ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Marital_Status,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Marital_Status")
ggplot(comb %>% group_by(Applicant_Qualification ) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Qualification  ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Qualification ,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Qualification")
ggplot(comb %>% group_by(Manager_Joining_Designation) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Joining_Designation ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Joining_Designation,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Joining_Designation")
ggplot(comb %>% group_by(Manager_Current_Designation) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Current_Designation ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Current_Designation,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Current_Designation")
ggplot(comb %>% group_by(Manager_Grade) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Grade ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Grade,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Grade")
ggplot(comb %>% group_by(Manager_Status) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Status ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Status,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Status")
ggplot(comb %>% group_by(Manager_Gender) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Gender ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Gender,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Gender")
ggplot(comb %>% group_by( Manager_Num_Application ) %>% summarise(Count = n())) +
geom_bar(aes( Manager_Num_Application ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes( Manager_Num_Application,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle(" Manager_Num_Application ")
ggplot(comb %>% group_by( Manager_Num_Coded) %>% summarise(Count = n())) +
geom_bar(aes( Manager_Num_Coded,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes( Manager_Num_Coded ,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle(" Manager_Num_Coded  ")
p3=ggplot(comb)+geom_histogram(aes(Applicant_BirthDate  ),binwidth = 1,fill="blue")
p4=ggplot(comb)+geom_histogram(aes(Application_Receipt_Date  ),binwidth = 1,fill="blue")
p5=ggplot(comb)+geom_histogram(aes(Manager_DOJ),binwidth = 1,fill="blue")
p6=ggplot(comb)+geom_histogram(aes(Manager_DoB ),binwidth = 1,fill="blue")
p7=ggplot(comb)+geom_histogram(aes(Manager_Business),binwidth = 0.005,fill="blue")
p8=ggplot(comb)+geom_histogram(aes(Manager_Num_Products ),binwidth = 1,fill="blue")
View(p7)
View(p7)
p9=ggplot(comb)+geom_histogram(aes(Manager_Business2),binwidth = 0.005,fill="blue")
p10=ggplot(comb)+geom_histogram(aes(Manager_Num_Products2),binwidth = 1,fill="blue")
colSums(comb$Manager_Business==comb$Manager_Business2)/length(comb$Manager_Business)*100
percent(colMeans(comb$Manager_Business==comb$Manager_Business2))
library(scales)
percent(colMeans(comb$Manager_Business==comb$Manager_Business2))
setwd("D:/BA classes")
getwd()
library(data.table)#used for reading and manipulation of data
library(dplyr)#used for data manipulation and joining of data
library(ggplot2)#used for plotting
library(caret)#used for modeling
library(corrplot)#used for correlation
library(xgboost)#used for xgboost model
library(cowplot)#combing mutiple plots
train = fread("Train.csv")
test = fread("Test.csv")
dim(train)
dim(test)
str(train)
str(test)
View(train)
test[,Business_Sourced := NA]
comb = rbind(train,test)#combing the train and test to to perform bivariate analysis
dim(comb)
View(comb)
summary(comb)
summary(Compare(comb$Manager_Business,comb$Manager_Business2))
summary(comparison(comb$Manager_Business,comb$Manager_Business2))
p4=ggplot(comb)+geom_histogram(aes(Application_Receipt_Date  ),binwidth = 1,fill="blue")
p4=ggplot(comb)+geom_bar(aes(Application_Receipt_Date  ),binwidth = 1,fill="blue")
ggplot(comb %>% group_by( Application_Receipt_Date) %>% summarise(Count = n())) +
geom_bar(aes( Application_Receipt_Date,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes( Application_Receipt_Date ,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle(" Application_Receipt_Date  ")
ggplot(comb %>% group_by( Manager_Num_Coded) %>% summarise(Count = n())) +
geom_bar(aes( Manager_Num_Coded,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes( Manager_Num_Coded ,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle(" Manager_Num_Coded  ")
dim(train$Application_Receipt_Date)
library(data.table)
library(lubridate)
yr = duration(num = 1, units = "years")
X[, age := new_interval(comb$Applicant_BirthDate,01/01/2009 /yr][]
X[, age := new_interval(comb$Applicant_BirthDate,2009 /yr][]
comb[,applicant_age:= age_calc(comb$Applicant_BirthDate, enddate = 01/01/2009, units = "years", precise = TRUE)]
comb[,applicant_age:=  age_calc(comb$Applicant_BirthDate, as.Date('2009-01-01'))]
library(eeptools)
install.packages("eeptools")
comb[,applicant_age:=  age_calc(comb$Applicant_BirthDate, as.Date('2009-01-01'))]
comb$applicate_age = as.numeric(difftime(01-01-2009,comb$Applicant_BirthDate, units = "years"))/365
comb$applicant_DOB <- as.Date(comb$Applicant_BirthDate, "%m/%d/%Y")
dim(comb)
comb$manger_DOJ2 <- as.Date(comb$Manager_DOJ, "%m/%d/%Y")
comb$manger_DOB2 <- as.Date(comb$Manager_DoB, "%m/%d/%Y")
dim(comb)
comb$applicant_age <- age_calc(comb$applicant_DOB, as.Date('2009-01-01'))
library(eeptools)
comb$applicant_age <- age_calc(comb$applicant_DOB, as.Date('2009-01-01'))
comb$applicant_age <- age_calc(comb$applicant_DOB, as.Date('2009-01-01'),TRUE)
comb$applicant_age <- age_calc(comb$applicant_DOB,2009-01-01),TRUE)
comb$applicant_age <- age_calc(comb$applicant_DOB, as.Date('2009-01-01'),TRUE)
comb$applicant_age <- age_calc(comb$applicant_DOB, enddate = 2009-01-01, units = "years", precise = FALSE)
comb$applicant_age <- age_calc(comb$applicant_DOB, enddate = '2009-01-01', units = "years", precise = FALSE)
class <- c(2009-01-01)
comb$applicant_age <- age_calc(comb$applicant_DOB, enddate = class, units = "years", precise = FALSE)
library(lubridate)
comb$applicant_age<-as.numeric(difftime(as.Date(comb$applicant_DOB), as.Date("2009-01-01"), unit="weeks"))/52.25
dim(comb)
comb$applicant_age<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$applicant_DOB), unit="weeks"))/52.25
dim(comb)
comb$manger_DateofJoin<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOJ2), unit="weeks"))/52.25
comb$manger_DoB<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOB2), unit="weeks"))/52.25
dim(comb)
comb[c('applicant_DOB','manger_DOJ2','manger_DOB2')] <- list(NULL)
comb[c("applicant_DOB","manger_DOJ2","manger_DOB2")] <- list(NULL)
View(comb)
comb$applicant_DOB<-comb$manger_DOJ2<-comb$manger_DOB2<-NULL
comb$Applicant_BirthDate<-comb$Manager_DOJ<-comb$Manager_DoB<-NULL
comb$Applicant_Gender<-as.numeric(comb$Applicant_Gender=="M")
ggplot(comb %>% group_by(Applicant_Marital_Status) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Marital_Status ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Marital_Status,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Marital_Status")
comb$Manager_Status<-as.numeric(comb$Manager_Status=="Confirmation")
comb$Manager_Gender<-as.numeric(comb$Manager_Gender=="M")
ggplot(comb %>% group_by(Manager_Status) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Status ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Status,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Status")
comb$Manager_Status<-as.numeric(comb$Manager_Status=="Confirmation",NA)
setwd("D:/BA classes")
getwd()
library(data.table)#used for reading and manipulation of data
library(dplyr)#used for data manipulation and joining of data
library(ggplot2)#used for plotting
library(caret)#used for modeling
library(corrplot)#used for correlation
library(xgboost)#used for xgboost model
library(cowplot)#combing mutiple plots
train = fread("Train.csv")
test = fread("Test.csv")
dim(train)
dim(test)
str(train)
str(test)
View(train)
test[,Business_Sourced := NA]
comb = rbind(train,test)#combing the train and test to to perform bivariate analysis
dim(comb)
View(comb)
comb$applicant_DOB <- as.Date(comb$Applicant_BirthDate, "%m/%d/%Y")
comb$manger_DOJ2 <- as.Date(comb$Manager_DOJ, "%m/%d/%Y")
comb$manger_DOB2 <- as.Date(comb$Manager_DoB, "%m/%d/%Y")
library(lubridate)
comb$applicant_age<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$applicant_DOB), unit="weeks"))/52.25
comb$manger_DateofJoin<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOJ2), unit="weeks"))/52.25
comb$manger_DoB<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOB2), unit="weeks"))/52.25
comb$applicant_DOB<-comb$manger_DOJ2<-comb$manger_DOB2<-NULL#deleting the unwanted column
comb$Applicant_BirthDate<-comb$Manager_DOJ<-comb$Manager_DoB<-NULL
comb$Applicant_Gender<-as.numeric(comb$Applicant_Gender=="M")
ggplot(comb %>% group_by(Manager_Gender) %>% summarise(Count = n())) +
geom_bar(aes(Manager_Gender ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Manager_Gender,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Manager_Gender")
ggplot(comb %>% group_by(Applicant_Gender) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Gender,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Gender,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Gender")
setwd("D:/BA classes")
getwd()
library(data.table)#used for reading and manipulation of data
library(dplyr)#used for data manipulation and joining of data
library(ggplot2)#used for plotting
library(caret)#used for modeling
library(corrplot)#used for correlation
library(xgboost)#used for xgboost model
library(cowplot)#combing mutiple plots
train = fread("Train.csv")
test = fread("Test.csv")
dim(train)
dim(test)
str(train)
str(test)
View(train)
test[,Business_Sourced := NA]
comb = rbind(train,test)#combing the train and test to to perform bivariate analysis
dim(comb)
View(comb)
#coverting date to ages (age column)
comb$applicant_DOB <- as.Date(comb$Applicant_BirthDate, "%m/%d/%Y")
comb$manger_DOJ2 <- as.Date(comb$Manager_DOJ, "%m/%d/%Y")
comb$manger_DOB2 <- as.Date(comb$Manager_DoB, "%m/%d/%Y")
library(lubridate)
comb$applicant_age<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$applicant_DOB), unit="weeks"))/52.25
comb$manger_DateofJoin<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOJ2), unit="weeks"))/52.25
comb$manger_DoB<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOB2), unit="weeks"))/52.25
comb$applicant_DOB<-comb$manger_DOJ2<-comb$manger_DOB2<-NULL#deleting the unwanted column
comb$Applicant_BirthDate<-comb$Manager_DOJ<-comb$Manager_DoB<-NULL
ggplot(comb %>% group_by(Applicant_Gender) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Gender,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Gender,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Gender")
comb[,Applicant_Gender2 := ifelse(Applicant_Gender == "M",1, ifelse(Applicant_Gender == "F",1,NA))]
comb[,Applicant_Gender := ifelse(Applicant_Gender == "M",1, ifelse(Applicant_Gender == "F",1,NA))]
View(comb)
setwd("D:/BA classes")
getwd()
library(data.table)#used for reading and manipulation of data
library(dplyr)#used for data manipulation and joining of data
library(ggplot2)#used for plotting
library(caret)#used for modeling
library(corrplot)#used for correlation
library(xgboost)#used for xgboost model
library(cowplot)#combing mutiple plots
train = fread("Train.csv")
test = fread("Test.csv")
dim(train)
dim(test)
str(train)
str(test)
View(train)
test[,Business_Sourced := NA]
comb = rbind(train,test)#combing the train and test to to perform bivariate analysis
dim(comb)
View(comb)
#coverting date to ages (age column)
comb$applicant_DOB <- as.Date(comb$Applicant_BirthDate, "%m/%d/%Y")
comb$manger_DOJ2 <- as.Date(comb$Manager_DOJ, "%m/%d/%Y")
comb$manger_DOB2 <- as.Date(comb$Manager_DoB, "%m/%d/%Y")
library(lubridate)
comb$applicant_age<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$applicant_DOB), unit="weeks"))/52.25
comb$manger_DateofJoin<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOJ2), unit="weeks"))/52.25
comb$manger_DoB<-as.numeric(difftime(as.Date("2009-01-01"), as.Date(comb$manger_DOB2), unit="weeks"))/52.25
comb$applicant_DOB<-comb$manger_DOJ2<-comb$manger_DOB2<-NULL#deleting the unwanted column
comb$Applicant_BirthDate<-comb$Manager_DOJ<-comb$Manager_DoB<-NULL
comb[,Applicant_Gender_num := ifelse(Applicant_Gender == "M",1, ifelse(Applicant_Gender == "F",0,NA))]
View(comb)
ggplot(comb %>% group_by(Applicant_Gender_num) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Gender_num,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Gender_num,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Gender_num")
dim(comb)
str(comb)
comb[,Applicant_Marital_Status_num := ifelse(Applicant_Marital_Status == "M",0, ifelse(Applicant_Marital_Status == "S",1,ifelse(Applicant_Marital_Status == "D",2,ifelse(Applicant_Marital_Status == "W",3,NA))))]
View(comb)
ggplot(comb %>% group_by(Applicant_Marital_Status_num) %>% summarise(Count = n())) +
geom_bar(aes(Applicant_Marital_Status_num ,Count),stat = "identity",fill="red") + xlab("") +
geom_label(aes(Applicant_Marital_Status_num,Count,label= Count),vjust=0.5) + theme(axis.text.x= element_text(angle = 45,hjust = 1))+
ggtitle("Applicant_Marital_Status_num")
comb[,Applicant_Occupation_num  := ifelse(Applicant_Occupation == "Business",0,
ifelse(Applicant_Occupation  == "Others",1,
ifelse(Applicant_Occupation  == "Salaried",2,
ifelse(Applicant_Marital_Status == "SelfEmployed",3,
ifelse(Applicant_Marital_Status == "Student",4,NA)))))]
View(comb)
comb[,Applicant_Qualification_num := ifelse(Applicant_Qualification == "Class XII",0,
ifelse(Applicant_Qualification == "Graduate",1,
ifelse(Applicant_Qualification == "class X",2,
ifelse(Applicant_Qualification == "Others",3,4,NA))))]
comb[,Applicant_Qualification_num := ifelse(Applicant_Qualification == "Class XII",0,
ifelse(Applicant_Qualification == "Graduate",1,
ifelse(Applicant_Qualification == "class X",2,
ifelse(Applicant_Qualification == "Others",3,4))))]
View(comb)
str(comb)
comb[,Manager_Joining_Designation_num := ifelse(Manager_Joining_Designation == "Level 1",0,
ifelse(Manager_Joining_Designation == "Level 2",1,
ifelse(Manager_Joining_Designation == "Level 3",2,
ifelse(Manager_Joining_Designation == "Level 4",3,
ifelse(Manager_Joining_Designation == "Other",4,5,NA)))))]
comb[,Manager_Joining_Designation_num := ifelse(Manager_Joining_Designation == "Level 1",0,
ifelse(Manager_Joining_Designation == "Level 2",1,
ifelse(Manager_Joining_Designation == "Level 3",2,
ifelse(Manager_Joining_Designation == "Level 4",3,
ifelse(Manager_Joining_Designation == "Other",4,5,6)))))]
comb[,Manager_Joining_Designation_num := ifelse(Manager_Joining_Designation == "Level 1",0,
ifelse(Manager_Joining_Designation == "Level 2",1,
ifelse(Manager_Joining_Designation == "Level 3",2,
ifelse(Manager_Joining_Designation == "Level 4",3,
ifelse(Manager_Joining_Designation == "Other",4,5)))))]
comb[,Manager_Current_Designation_num := ifelse(Manager_Current_Designation == "Level 1",0,
ifelse(Manager_Current_Designation == "Level 2",1,
ifelse(Manager_Current_Designation == "Level 3",2,
ifelse(Manager_Current_Designation == "Level 4",3,
ifelse(Manager_Current_Designation == "Level 5",4,NA)))))]
comb[,Manager_Status_num := ifelse(Manager_Status == "Confirmation",1, ifelse(Manager_Status == "Probation",0,NA))]
comb[,Manager_Gender_num := ifelse(Manager_Gender == "M",1, ifelse(Manager_Gender == "F",0,NA))]
str(comb)
View(comb)
##delelting the unwanted variables
comb$Applicant_City_PIN<-comb$Applicant_Gender<-comb$Applicant_Marital_Status<-comb$Applicant_Occupation<-
comb$Applicant_Qualification<-comb$Manager_Joining_Designation<-comb$Manager_Current_Designation
<-comb$Manager_Status<-comb$Manager_Gender<-NULL
comb$Applicant_City_PIN<-comb$Applicant_Gender<-comb$Applicant_Marital_Status<-comb$Applicant_Occupation<-
comb$Applicant_Qualification<-comb$Manager_Joining_Designation<-comb$Manager_Current_Designation<-comb$Manager_Status<-comb$Manager_Gender<-NULL
View(comb)
ggplot(comb)+geom_histogram(aes(Manager_Business),binwidth = 0.005,fill="blue")
ggplot(train)+geom_bar(aes(train$Business_Sourced),binwidth = 100,fill="green")+xlab("Business_Sourced")
comb$Application_Receipt_Date <- as.Date(comb$Application_Receipt_Date, "%m/%d/%Y")
summary(comb)
train = comb[1:nrow(train)]
test = comb[(nrow(train) + 1):nrow(comb)]
test[,Item_Outlet_Sales := NULL]#removing the na values for test
test[,Business_Sourced := NULL]#removing the na values for test
View(test)
View(train)
train$Office_PIN<-NULL
train$Office_PIN<-NULL
View(test)
test$Office_PIN<-NULL
dtrain = xgb.DMatrix(data = as.matrix(train[,-c("ID")]),label = train$Business_Sourced)
dtest = xgb.DMatrix(data = as.matrix(test[,-c("ID")]))
str(train)
dtrain = xgb.DMatrix(data = as.matrix(train[,-c("ID","Business_Sourced")]),label = train$Business_Sourced)
dtest = xgb.DMatrix(data = as.matrix(test[,-c("ID")]))
dtrain = xgb.DMatrix(data = as.matrix(train[,-c("ID","Business_Sourced","Application_Receipt_Date")]),label = train$Business_Sourced)
dtest = xgb.DMatrix(data = as.matrix(test[,-c("ID")]))
dtest = xgb.DMatrix(data = as.matrix(test[,-c("ID","Application_Receipt_Date")]))
param_list = list(eta =0.01, gamma=1,max_depth=6,subsample=0.8,colsample_bytree=0.5)
set.seed(111)
xgbcv = xgb.cv(params = param_list , data = dtrain ,nrounds = 1000 , nfold = 5 ,print_every_n = 10,
early_stopping_rounds = 30 , maximize = F)
xgb_model = xgb.train(data = dtrain , params = param_list , nrounds = 529)
submission = fread("sample_submission.csv")
submission$Business_Sourced<-predict(xgb_model,dtest)
write.csv(submission,"Xgboost.csv",row.names = F)
trctrl<-trainControl(method = "repeatedcv" , number = 10, repeats=3)
grid<-expand.grid(C=c(0,0.01,0.05,0.1,0.25,0.5,0.75,1,1.25,1.5,1.75,2.5))
SVM_model<-svm(formula = Business_Sourced ~ .,
data = train,
type = 'C-classification',
kernel = 'linear',
trControl=trctrl,
preProcess=c("center","scale"),
tuneGrid=grid,
tuneLength = 10)
library(e1071)
SVM_model<-svm(formula = Business_Sourced ~ .,
data = train[,-c("ID","Application_Receipt_Date")],
type = 'C-classification',
kernel = 'linear',
trControl=trctrl,
preProcess=c("center","scale"),
tuneGrid=grid,
tuneLength = 10)
submission$Business_Sourced<-predict(SVM_model,test[,-c("ID","Application_Receipt_Date")])
write.csv(submission,"SVM.csv",row.names = F)
submission1 = fread("sample_submission.csv")
submission1$Business_Sourced<-predict(SVM_model,test[,-c("ID","Application_Receipt_Date")])
write.csv(submission1,"SVM.csv",row.names = F)
View(train)
submission1$Business_Sourced<-predict(SVM_model,test[,-c("ID","Application_Receipt_Date")],decision.values = TRUE)
predict(SVM_model,test[,-c("ID","Application_Receipt_Date")])
submission1$Business_Sourced<-predict(SVM_model,test[,-c("ID","Application_Receipt_Date")])
boostmodel = boosting.cv(Business_Sourced~., data=train[,-c("ID","Business_Sourced","Application_Receipt_Date")], boos=TRUE, mfinal=10, v=5)
library(adabag)
install.packages(adabag)
install.packages('adabag')
boostmodel = boosting.cv(Business_Sourced~., data=train[,-c("ID","Business_Sourced","Application_Receipt_Date")], boos=TRUE, mfinal=10, v=5)
boostmodel = boosting(Business_Sourced~., data=train[,-c("ID","Business_Sourced","Application_Receipt_Date")], boos=TRUE, mfinal=10, v=5)
library(adabag)
boostmodel = boosting(Business_Sourced~., data=train[,-c("ID","Business_Sourced","Application_Receipt_Date")], boos=TRUE, mfinal=10, v=5)
boostmodel = boosting(Business_Sourced~., data=train[,-c("ID","Application_Receipt_Date")], boos=TRUE, mfinal=10, v=5)
